package gss.ETLCode.bin;

import java.util.Map;

public class ODS_C04_GetData {

	public static String getHQL(Map<String, String> mapProp, String tableName, String odsTableName, String finalLen, boolean hasChinese) {

		String rs = "-----------------------------------------------------------------\n"
				+ "-- parameter list\n"
				+ "-----------------------------------------------------------------\n"
				+ "set hivevar:BATCHID=20230329000000;\n"
				+ "set hivevar:FIX_LENGTH="+finalLen+";\n"
				+ "set hivevar:FILE_PATH=/user/post1/Upload/tmp;\n"
				+ "set hivevar:TAR_TABLE="+tableName+";\n"
				+ "set hivevar:RSLT="+mapProp.get("hadoop.tmp.dbname")+"."+tableName+"_result;\n"
				+ "set hivevar:SRC1_C04="+mapProp.get("hadoop.meta.dbname")+"."+odsTableName+"_files_name;\n"
				+ "set hivevar:DES1_C04="+mapProp.get("hadoop.meta.dbname")+"."+odsTableName+"_data_files;\n"
				+ "set hivevar:FUNC_NAME="+odsTableName+"_GetData;\n"
				+ "set hivevar:KEY_NAME=return_code;\n"
				+ "set hivevar:LOGIC_NAME="+tableName+";\n"
				+ "set hivevar:TMP1=tmp_"+odsTableName+"_041;\n"
				+ "set hivevar:TMP2=tmp_"+odsTableName+"_042;\n"
				+ "-----------------------------------------------------------------\n"
				+ "\n"
				+ "-- Main logic\n"
				+ "--get right fix length data,even check length from last step\n"
				+ "drop table if exists ${hivevar:TMP1};\n"
				+ "\n"
				+ "create table if not exists ${hivevar:TMP1}\n"
				+ "as\n"
				+ "select *,LENGTH("+(hasChinese ? "ENCODE(LINE,'BIG5')" : "LINE")+") as FIX_LENGTH\n"
				+ "from  ${hivevar:SRC1_C04}\n"
				+ "WHERE LENGTH("+(hasChinese ? "ENCODE(LINE,'BIG5')" : "LINE")+") = ${hivevar:FIX_LENGTH}\n"
				+ ";\n"
				+ "\n"
				+ "\n"
				+ "--create data_files\n"
				+ "DROP TABLE  IF EXISTS ${hivevar:DES1_C04};\n"
				+ "\n"
				+ "CREATE TABLE IF NOT EXISTS ${hivevar:DES1_C04}\n"
				+ "(\n"
				+ "parse_cfg_dts bigint,\n"
				+ "file_name string,\n"
				+ "line_rand_seq bigint,\n"
				+ "--定長長度\n"
				+ "fix_length INTEGER,\n"
				+ "--資料實際長度\n"
				+ "data_length INTEGER,\n"
				+ "dts bigint,\n"
				+ "create_time timestamp,\n"
				+ "line string,\n"
				+ "batchid BIGINT,\n"
				+ "file_type STRING\n"
				+ ")\n"
				+ ";\n"
				+ "\n"
				+ "\n"
				+ "insert into table ${hivevar:DES1_C04}\n"
				+ "select \n"
				+ "    -1            as parse_cfg_dts,\n"
				+ "    file_name,\n"
				+ "    row_number() over(partition by reverse(split(reverse(file_name),'/')[0]))     as line_rand_seq,\n"
				+ "    length("+(hasChinese ? "ENCODE(LINE,'BIG5')" : "LINE")+") as fix_length,\n"
				+ "    length(trim(line)) as data_length,\n"
				+ "    batchid               as dts,\n"
				+ "    current_timestamp()   as create_time,\n"
				+ "    line,\n"
				+ "    batchid,\n"
				+ "    SUBSTRING_INDEX(SUBSTR(file_name,locate('${hivevar:FILE_PATH}' || '/' || '${hivevar:TAR_TABLE}',file_name)),'/',-1)  as file_type\n"
				+ "from (\n"
				+ "	SELECT *\n"
				+ "	FROM ${hivevar:TMP1}\n"
				+ "	WHERE !(trim(line) REGEXP '^[0-9]\\{8\\}$'\n"
				+ "		OR trim(line) REGEXP '^[0-9]\\{17\\}$')\n"
				+ "	)H\n"
				+ ";\n"
				+ "\n"
				+ "\n"
				+ "-- verification\n"
				+ "-- first getting the row count from running the load_data_path function\n"
				+ "drop table if exists ${hivevar:TMP2};\n"
				+ "create table ${hivevar:TMP2}\n"
				+ "as\n"
				+ "select\n"
				+ "count(1) as row_count\n"
				+ "from ${hivevar:DES1_C04}\n"
				+ ";\n"
				+ "\n"
				+ "-- verification(2/2)\n"
				+ "-- secod, record the return code\n"
				+ "-- in this case\n"
				+ "-- row_count > 0 return 0\n"
				+ "-- else return 1\n"
				+ "\n"
				+ "-- 0 => success\n"
				+ "-- 1 => failure\n"
				+ "insert into table ${hivevar:RSLT}\n"
				+ "select\n"
				+ "   '${hivevar:LOGIC_NAME}',\n"
				+ "   ${hivevar:BATCHID},\n"
				+ "   '${hivevar:FUNC_NAME}',\n"
				+ "   '${hivevar:KEY_NAME}',\n"
				+ "   'info',\n"
				+ "   case\n"
				+ "      when row_count > 0 then 0\n"
				+ "      else 1\n"
				+ "   end as rc,\n"
				+ "   current_timestamp()   as create_time\n"
				+ "from ${hivevar:TMP2}\n"
				+ ";\n"
				+ "\n"
				+ "";
		
		return rs;
	}

	public static String getVAR(Map<String, String> mapProp, String tableName, String odsTableName, String finalLen) {

		String rs = "-----------------------------------------------------------------\n"
				+ "-- parameter list\n"
				+ "-----------------------------------------------------------------\n"
				+ "set hivevar:BATCHID=20230329000000;\n"
				+ "set hivevar:FIX_LENGTH="+finalLen+";\n"
				+ "set hivevar:FILE_PATH=/user/post1/Upload/tmp;\n"
				+ "set hivevar:TAR_TABLE="+tableName+";\n"
				+ "set hivevar:RSLT="+mapProp.get("hadoop.tmp.dbname")+"."+tableName+"_result;\n"
				+ "set hivevar:SRC1_C04="+mapProp.get("hadoop.meta.dbname")+"."+odsTableName+"_files_name;\n"
				+ "set hivevar:DES1_C04="+mapProp.get("hadoop.meta.dbname")+"."+odsTableName+"_data_files;\n"
				+ "set hivevar:FUNC_NAME="+odsTableName+"_GetData;\n"
				+ "set hivevar:KEY_NAME=return_code;\n"
				+ "set hivevar:LOGIC_NAME="+tableName+";\n"
				+ "set hivevar:TMP1=tmp_"+odsTableName+"_041;\n"
				+ "set hivevar:TMP2=tmp_"+odsTableName+"_042;\n"
				+ "-----------------------------------------------------------------\n"
				+ "\n";
		
		return rs;
	}
	
	public static String getHQL_airflow(Map<String, String> mapProp, String tableName, String odsTableName, String finalLen, boolean hasChinese) {

		String rs = "-----------------------------------------------------------------\n"
				+ "-- parameter list\n"
				+ "-----------------------------------------------------------------\n"
				+ "set hivevar:FIX_LENGTH="+finalLen+";\n"
				+ "set hivevar:FILE_PATH=/user/post1/Upload/tmp;\n"
				+ "set hivevar:TAR_TABLE="+tableName+";\n"
				+ "set hivevar:RSLT="+mapProp.get("hadoop.tmp.dbname")+"."+tableName+"_result;\n"
				+ "set hivevar:SRC1_C04="+mapProp.get("hadoop.meta.dbname")+"."+odsTableName+"_files_name;\n"
				+ "set hivevar:DES1_C04="+mapProp.get("hadoop.meta.dbname")+"."+odsTableName+"_data_files;\n"
				+ "set hivevar:FUNC_NAME="+odsTableName+"_GetData;\n"
				+ "set hivevar:KEY_NAME=return_code;\n"
				+ "set hivevar:LOGIC_NAME="+tableName+";\n"
				+ "set hivevar:TMP1=tmp_"+odsTableName+"_041;\n"
				+ "set hivevar:TMP2=tmp_"+odsTableName+"_042;\n"
				+ "-----------------------------------------------------------------\n"
				+ "\n"
				+ "-- Main logic\n"
				+ "--get right fix length data,even check length from last step\n"
				+ "drop table if exists ${hivevar:TMP1};\n"
				+ "\n"
				+ "create table if not exists ${hivevar:TMP1}\n"
				+ "as\n"
				+ "select *,LENGTH("+(hasChinese ? "ENCODE(LINE,'BIG5')" : "LINE")+") as FIX_LENGTH\n"
				+ "from  ${hivevar:SRC1_C04}\n"
				+ "WHERE LENGTH("+(hasChinese ? "ENCODE(LINE,'BIG5')" : "LINE")+") = ${hivevar:FIX_LENGTH}\n"
				+ ";\n"
				+ "\n"
				+ "\n"
				+ "--create data_files\n"
				+ "DROP TABLE  IF EXISTS ${hivevar:DES1_C04};\n"
				+ "\n"
				+ "CREATE TABLE IF NOT EXISTS ${hivevar:DES1_C04}\n"
				+ "(\n"
				+ "parse_cfg_dts bigint,\n"
				+ "file_name string,\n"
				+ "line_rand_seq bigint,\n"
				+ "--定長長度\n"
				+ "fix_length INTEGER,\n"
				+ "--資料實際長度\n"
				+ "data_length INTEGER,\n"
				+ "create_time timestamp,\n"
				+ "line string,\n"
				+ "file_type STRING\n"
				+ ")\n"
				+ ";\n"
				+ "\n"
				+ "\n"
				+ "insert into table ${hivevar:DES1_C04}\n"
				+ "select \n"
				+ "    -1            as parse_cfg_dts,\n"
				+ "    file_name,\n"
				+ "    row_number() over(partition by reverse(split(reverse(file_name),'/')[0]))     as line_rand_seq,\n"
				+ "    length("+(hasChinese ? "ENCODE(LINE,'BIG5')" : "LINE")+") as fix_length,\n"
				+ "    length(trim(line)) as data_length,\n"
				+ "    current_timestamp()   as create_time,\n"
				+ "    line,\n"
				+ "    SUBSTRING_INDEX(SUBSTR(file_name,locate('${hivevar:FILE_PATH}' || '/' || '${hivevar:TAR_TABLE}',file_name)),'/',-1)  as file_type\n"
				+ "from (\n"
				+ "	SELECT *\n"
				+ "	FROM ${hivevar:TMP1}\n"
				+ "	WHERE !(trim(line) REGEXP '^[0-9]\\{8\\}$'\n"
				+ "		OR trim(line) REGEXP '^[0-9]\\{17\\}$')\n"
				+ "	)H\n"
				+ ";\n"
				+ "\n"
				+ "\n"
				+ "-- verification\n"
				+ "-- first getting the row count from running the load_data_path function\n"
				+ "drop table if exists ${hivevar:TMP2};\n"
				+ "create table ${hivevar:TMP2}\n"
				+ "as\n"
				+ "select\n"
				+ "count(1) as row_count\n"
				+ "from ${hivevar:DES1_C04}\n"
				+ ";\n"
				+ "\n"
				+ "-- verification(2/2)\n"
				+ "-- secod, record the return code\n"
				+ "-- in this case\n"
				+ "-- row_count > 0 return 0\n"
				+ "-- else return 1\n"
				+ "\n"
				+ "-- 0 => success\n"
				+ "-- 1 => failure\n"
				+ "insert into table ${hivevar:RSLT}\n"
				+ "select\n"
				+ "   '${hivevar:LOGIC_NAME}',\n"
				+ "   '${hivevar:FUNC_NAME}',\n"
				+ "   '${hivevar:KEY_NAME}',\n"
				+ "   'info',\n"
				+ "   case\n"
				+ "      when row_count > 0 then 0\n"
				+ "      else 1\n"
				+ "   end as rc,\n"
				+ "   current_timestamp()   as create_time\n"
				+ "from ${hivevar:TMP2}\n"
				+ ";\n"
				+ "\n"
				+ "";
		
		return rs;
	}

}
